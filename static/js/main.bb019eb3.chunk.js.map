{"version":3,"sources":["components/Detector/ImgDialog.js","components/Detector/CropImage.js","components/Loader/LoaderSpinner.js","components/Detector/Detector.js","components/Detector/styles.js","components/ModalView/PrivacyModal.js","components/Footer/FooterPage.js","components/IntroView/Text1.js","components/IntroView/Text2.js","components/IntroView/IntroView.js","App.js","serviceWorker.js","index.js"],"names":["Transition","props","Slide","direction","ImgDialog","state","open","handleClickOpen","setState","handleClose","classes","this","Dialog","maxWidth","img","onClose","TransitionComponent","AppBar","className","appBar","Toolbar","IconButton","color","onClick","aria-label","Typography","variant","flex","result","imgContainer","src","alt","React","Component","withStyles","position","background","fontFamily","padding","display","justifyContent","alignItems","maxHeight","fontSize","margin","createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","getRadianAngle","degreeValue","Math","PI","getCroppedImg","imageSrc","pixelCrop","a","rotation","canvas","document","createElement","ctx","getContext","maxSize","max","width","height","safeArea","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","x","y","toBlob","file","URL","createObjectURL","LoaderSpinner","promiseInProgress","usePromiseTracker","type","timeout","theme","palette","primary","secondary","cropContainer","breakpoints","up","cropButton","flexShrink","controls","flexDirection","sliderContainer","sliderLabel","down","minWidth","slider","marginLeft","useState","getImage","setImage","getFile","setFile","crop","setCrop","setRotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","getResultString","setResultString","hasResult","setHasResult","isLoading","setIsLoading","detect","blob","console","log","FormData","append","trackPromise","fetch","method","body","then","r","json","disease","onCropComplete","useCallback","croppedArea","showCroppedImage","aspect","onCropChange","onRotationChange","onZoomChange","style","root","Slider","value","min","step","aria-labelledby","onChange","e","paddingRight","Button","component","target","files","upload","startIcon","PrivacyModal","setOpen","policyText","center","FooterPage","icon","faCopyright","paddingLeft","Date","getFullYear","href","faGithub","faFacebook","faYoutube","Text1","Text2","IntroView","to","App","path","exact","Detector","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bb019eb3.chunk.js","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport React from \"react\";\r\n\r\nconst styles = {\r\n    appBar: {\r\n        position: \"relative\",\r\n        background: \"#7ed957\",\r\n        fontFamily: \"Josefin Sans, sans-serif\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    imgContainer: {\r\n        position: \"relative\",\r\n        flex: 1,\r\n        padding: 30,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    img: {\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n    },\r\n    result: {\r\n        fontFamily: \"Josefin Sans, sans-serif\",\r\n        color: \"#5abf2f\",\r\n        fontSize: \"medium\",\r\n        position: \"relative\",\r\n        flex: 1,\r\n        margin: 10,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n};\r\n\r\nfunction Transition(props) {\r\n    return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass ImgDialog extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Dialog\r\n                maxWidth=\"md\"\r\n                open={!!this.props.img}\r\n                onClose={this.props.onClose}\r\n                TransitionComponent={Transition}\r\n            >\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"default\"\r\n                            onClick={this.props.onClose}\r\n                            aria-label=\"Close\"\r\n                        >\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography\r\n                            variant=\"h2\"\r\n                            color=\"secondary\"\r\n                            className={classes.flex}\r\n                        >\r\n                            <p>Detection Result </p>\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <p className={classes.result}>\r\n                    {\" \"}\r\n                    {this.props.result === \"powdery mildew\"\r\n                        ? \"rice blast\"\r\n                        : \"brown spot\"}{\" \"}\r\n                    Detected!\r\n                </p>\r\n                <div className={classes.imgContainer}>\r\n                    <img\r\n                        src={this.props.img}\r\n                        alt=\"Cropped\"\r\n                        className={classes.img}\r\n                    />\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ImgDialog);\r\n","const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.addEventListener(\"load\", () => resolve(image));\r\n        image.addEventListener(\"error\", (error) => reject(error));\r\n        image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n        image.src = url;\r\n    });\r\n\r\nfunction getRadianAngle(degreeValue) {\r\n    return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} image - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n * @param {number} rotation - optional rotation parameter\r\n */\r\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const maxSize = Math.max(image.width, image.height);\r\n    const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n    // set each dimensions to double largest dimension to allow for a safe area for the\r\n    // image to rotate in without being clipped by canvas context\r\n    canvas.width = safeArea;\r\n    canvas.height = safeArea;\r\n\r\n    // translate canvas context to a central location on image to allow rotating around the center.\r\n    ctx.translate(safeArea / 2, safeArea / 2);\r\n    ctx.rotate(getRadianAngle(rotation));\r\n    ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n    // draw rotated image and store data.\r\n    ctx.drawImage(\r\n        image,\r\n        safeArea / 2 - image.width * 0.5,\r\n        safeArea / 2 - image.height * 0.5\r\n    );\r\n    const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n    // set canvas width to final desired crop size - this will clear existing context\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // paste generated rotate image with correct offsets for x,y crop values.\r\n    ctx.putImageData(\r\n        data,\r\n        0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x,\r\n        0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y\r\n    );\r\n\r\n    // As Base64 string\r\n    // return canvas.toDataURL('image/jpeg');\r\n\r\n    // As a blob\r\n    return new Promise((resolve) => {\r\n        canvas.toBlob((file) => {\r\n            resolve(URL.createObjectURL(file));\r\n        }, \"image/jpeg\");\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\n\r\nconst LoaderSpinner = (props) => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    return (\r\n        <div>\r\n            {promiseInProgress === true ? (\r\n                <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#5abf2f\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\nexport default LoaderSpinner;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ImgDialog from \"./ImgDialog\";\r\nimport getCroppedImg from \"./CropImage\";\r\nimport { styles } from \"./styles\";\r\n\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport LoaderSpinner from \"../Loader/LoaderSpinner\";\r\n\r\nconst Detector = ({ classes }) => {\r\n    const [getImage, setImage] = useState(null);\r\n    const [getFile, setFile] = useState(null);\r\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n    const [rotation, setRotation] = useState(0);\r\n    const [zoom, setZoom] = useState(5);\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n    const [croppedImage, setCroppedImage] = useState(null);\r\n    const [getResultString, setResultString] = useState(\"No result\");\r\n    const [hasResult, setHasResult] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const upload = (e) => {\r\n        console.log(\"Upload\");\r\n        setFile(e.target.files[0]);\r\n        setImage(URL.createObjectURL(e.target.files[0]));\r\n        console.log(\"dogImage :\", e.target.files[0]);\r\n    };\r\n    const createResult = (result) => {\r\n        if (result) {\r\n            console.log(result);\r\n            setHasResult(true);\r\n            return result.disease;\r\n        } else {\r\n            console.log(\"Please upload a valid image\");\r\n            setHasResult(false);\r\n            return \"Uplead a valid Image\";\r\n        }\r\n    };\r\n\r\n    const detect = (blob) => {\r\n        console.log(\"Detect\");\r\n        if (getImage) {\r\n            console.log(\"Detect er cropped Image  \", croppedImage);\r\n            console.log(\"The get file\", getFile);\r\n            console.log(\"The blob in use\", blob);\r\n\r\n            const data = new FormData();\r\n            data.append(\"image\", blob);\r\n            setIsLoading(true);\r\n            trackPromise(\r\n                fetch(\"https://agrgb-rest.herokuapp.com/api/detect\", {\r\n                    method: \"POST\",\r\n                    body: data,\r\n                })\r\n            )\r\n                .then((r) => r.json())\r\n                .then((r) => setResultString(createResult(r)));\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n        setCroppedAreaPixels(croppedAreaPixels);\r\n    }, []);\r\n\r\n    const showCroppedImage = useCallback(async () => {\r\n        try {\r\n            const croppedImage = await getCroppedImg(\r\n                getImage,\r\n                croppedAreaPixels,\r\n                rotation\r\n            );\r\n            console.log(\"donee\", croppedImage);\r\n            setCroppedImage(croppedImage);\r\n            const blob = await fetch(croppedImage).then((r) => r.blob());\r\n            detect(blob);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }, [croppedAreaPixels, rotation, getImage]);\r\n\r\n    const onClose = useCallback(() => {\r\n        setCroppedImage(null);\r\n        setHasResult(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.cropContainer}>\r\n                <Cropper\r\n                    image={getImage}\r\n                    crop={crop}\r\n                    rotation={rotation}\r\n                    zoom={zoom}\r\n                    aspect={3 / 4}\r\n                    onCropChange={setCrop}\r\n                    onRotationChange={setRotation}\r\n                    onCropComplete={onCropComplete}\r\n                    onZoomChange={setZoom}\r\n                />\r\n            </div>\r\n            <div className={classes.controls}>\r\n                <div className={classes.sliderContainer}>\r\n                    <Typography\r\n                        style={{ margin: 25, color: \"green\" }}\r\n                        variant=\"overline\"\r\n                        classes={{ root: classes.sliderLabel }}\r\n                    >\r\n                        <p style={{ fontSize: 12 }}>ZOOM</p>\r\n                    </Typography>\r\n                    <Slider\r\n                        value={zoom}\r\n                        min={1}\r\n                        max={5}\r\n                        step={0.1}\r\n                        aria-labelledby=\"Zoom\"\r\n                        onChange={(e, zoom) => setZoom(zoom)}\r\n                    />\r\n                </div>\r\n                <div className={classes.sliderContainer}>\r\n                    <Typography\r\n                        style={{ margin: 24, fontSize: 12 }}\r\n                        variant=\"overline\"\r\n                        classes={{ root: classes.sliderLabel }}\r\n                    >\r\n                        <p style={{ fontSize: 12, paddingRight: \"3px\" }}>\r\n                            ROTATE\r\n                        </p>\r\n                    </Typography>\r\n                    <Slider\r\n                        style={{ margin: \"10px\" }}\r\n                        value={rotation}\r\n                        min={0}\r\n                        max={360}\r\n                        step={1}\r\n                        aria-labelledby=\"Rotation\"\r\n                        onChange={(e, rotation) => setRotation(rotation)}\r\n                    />\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    component=\"label\"\r\n                    classes={{ root: classes.cropButton }}\r\n                >\r\n                    Upload File\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => upload(e)}\r\n                        style={{ display: \"none\" }}\r\n                    />\r\n                </Button>\r\n                <Button\r\n                    onClick={showCroppedImage}\r\n                    variant=\"outlined\"\r\n                    color=\"default\"\r\n                    classes={{ root: classes.cropButton }}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Detect\r\n                </Button>\r\n            </div>\r\n            {console.log(\"get result: \", getResultString)}\r\n            {console.log(\"hasResult \", hasResult)}\r\n            {console.log(\"Loder trac\", isLoading)}\r\n            {!hasResult && <LoaderSpinner />}\r\n            {hasResult && (\r\n                <ImgDialog\r\n                    img={croppedImage}\r\n                    result={getResultString}\r\n                    onClose={onClose}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(Detector);\r\n","export const styles = (theme) => ({\r\n    palette: {\r\n        primary: \"#7ed957\",\r\n        secondary: \"#58d8bf\",\r\n    },\r\n    cropContainer: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: 200,\r\n        background: \"#333\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: 400,\r\n        },\r\n    },\r\n    cropButton: {\r\n        flexShrink: 0,\r\n        margin: 2,\r\n    },\r\n    controls: {\r\n        padding: 16,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"stretch\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n        },\r\n    },\r\n    sliderContainer: {\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n        alignItems: \"center\",\r\n    },\r\n    sliderLabel: {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            minWidth: 65,\r\n        },\r\n    },\r\n    slider: {\r\n        padding: \"22px 0px\",\r\n        marginLeft: 16,\r\n        margin: 10,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            margin: \"10px\",\r\n        },\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\n\r\nconst PrivacyModal = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const policyText = (\r\n        <p>\r\n            Your privacy is important to us. It is our policy to respect your\r\n            privacy regarding any information we may collect from you across our\r\n            website, and other sites we own and operate. We only ask for\r\n            personal information when we truly need it to provide a service to\r\n            you.{\" \"}\r\n            <strong>\r\n                We do not collect any browsing data or any images you upload.\r\n            </strong>{\" \"}\r\n            We don’t share any personally identifying information publicly or\r\n            with third-parties, except when required to by law. Our website may\r\n            link to external sites that are not operated by us. Please be aware\r\n            that we have no control over the content and practices of these\r\n            sites, and cannot accept responsibility or liability for their\r\n            respective privacy policies. You are free to refuse our request for\r\n            your personal information, with the understanding that we may be\r\n            unable to provide you with some of your desired services. Your\r\n            continued use of our website will be regarded as acceptance of our\r\n            practices around privacy and personal information. If you have any\r\n            questions about how we handle user data and personal information,\r\n            feel free to contact us. This policy is effective as of 30 August\r\n            2020.\r\n        </p>\r\n    );\r\n    return (\r\n        <>\r\n            <button className=\"item1\" onClick={() => setOpen(true)}>\r\n                Privacy Policy\r\n            </button>\r\n            <Modal open={open} onClose={() => setOpen(false)} center>\r\n                <h2>Privacy Policy</h2>\r\n\r\n                {policyText}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrivacyModal;\r\n","import {\r\n    faFacebook,\r\n    faGithub,\r\n    faYoutube,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faCopyright } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport PrivacyModal from \"../ModalView/PrivacyModal\";\r\nimport \"./FooterPage.css\";\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"footer-container\">\r\n                <div className=\"item1\">\r\n                    <PrivacyModal />\r\n                </div>\r\n\r\n                <div className=\"item2\">\r\n                    <span style={{ paddingRight: 5 }}>Copyright </span>\r\n                    <FontAwesomeIcon icon={faCopyright} />{\" \"}\r\n                    <span style={{ paddingLeft: 5 }}>\r\n                        {new Date().getFullYear()} | All Rights Reserved.\r\n                    </span>\r\n                </div>\r\n                <a\r\n                    href=\"https://github.com/hafizalasad121/Rice-Disease-detector\"\r\n                    target=\"_blank\"\r\n                    className=\"item3\"\r\n                >\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                </a>\r\n                <a\r\n                    href=\"http://fb.com/hafiz.alasad.121\"\r\n                    target=\"_blank\"\r\n                    className=\"item4\"\r\n                >\r\n                    <FontAwesomeIcon icon={faFacebook} />\r\n                </a>\r\n                <a href=\"#\" className=\"item5\">\r\n                    <FontAwesomeIcon icon={faYoutube} />\r\n                </a>\r\n\r\n                {false && <PrivacyModal click={true} />}\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default FooterPage;\r\n","import React from \"react\";\r\n\r\nconst Text1 = (props) => {\r\n    return (\r\n        <div className=\"center\">\r\n            <p className=\"text1\">\r\n                Find out the disease in Rile Leaf using machine learning. Just\r\n                upload the image and press detect. Discover what disease your\r\n                plant have!\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Text1;\r\n","import React from \"react\";\r\nimport \"./Texts.css\";\r\n\r\nconst Text2 = (props) => {\r\n    return (\r\n        <div className=\"center\">\r\n            <p className=\"text2\">\r\n                Built with TensorFlow + Flask + React.\r\n                <br />\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Text2;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Text1 from \"./Text1\";\r\nimport Text2 from \"./Text2\";\r\n\r\nfunction IntroView() {\r\n    return (\r\n        <>\r\n            <div className=\"top-space\" />\r\n            <h1>Rice Disease Classification</h1>\r\n            <Text1 />\r\n            <Link to=\"/detector\">\r\n                <Button className=\"start-button start-button-size\">\r\n                    START...\r\n                </Button>\r\n            </Link>\r\n            <Text2 />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IntroView;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport Detector from \"./components/Detector/Detector\";\r\nimport FooterPage from \"./components/Footer/FooterPage\";\r\nimport IntroView from \"./components/IntroView/IntroView\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"content-wrap\">\r\n                <Route path=\"/\" exact component={IntroView} />\r\n                <Route path=\"/detector\" component={Detector} />\r\n            </div>\r\n            <FooterPage />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}